#ifndef TOKENSTRINGS_HPP
#define TOKENSTRINGS_HPP

#define CS_LEXER_IF_KEYWORD "if"
#define CS_LEXER_ELSE_KEYWORD "else"
#define CS_LEXER_WHILE_KEYWORD "while"
#define CS_LEXER_END_KEYWORD "end"
#define CS_LEXER_REQUIRE_KEYWORD "require"
#define CS_LEXER_FUNC_KEYWORD "func"
#define CS_LEXER_RETURN_KEYWORD "return"

#define CS_LEXER_TRUE_BOOL "true"
#define CS_LEXER_FALSE_BOOL "false"

#define CS_LEXER_PLUS_OPERATOR "+"
#define CS_LEXER_MINUS_OPERATOR "-"
#define CS_LEXER_DIVIDE_OPERATOR "/"
#define CS_LEXER_MULTIPLY_OPERATOR "*"

#define CS_LEXER_MINUSEQUAL_OPERATOR "-="
#define CS_LEXER_PLUSEQUAL_OPERATOR "+="
#define CS_LEXER_MULTIPLYEQUAL_OPERATOR "*="
#define CS_LEXER_DIVIDEEQUAL_OPERATOR "/="
#define CS_LEXER_PLUSPLUS_OPERATOR "++"
#define CS_LEXER_MINUSMINUS_OPERATOR "--"
#define CS_LEXER_EQUAL_OPERATOR "="

#define CS_LEXER_EQUALEQUAL_OPERATOR "=="
#define CS_LEXER_NOTEQUAL_OPERATOR "!="
#define CS_LEXER_LESSOREQUAL_OPERATOR "<="
#define CS_LEXER_GREATEROREQUAL_OPERATOR ">="
#define CS_LEXER_LESSER_OPERATOR "<"
#define CS_LEXER_GREATER_OPERATOR ">"
#define CS_LEXER_AND_OPERATOR "&&"
#define CS_LEXER_OR_OPERATOR "||"
#define CS_LEXER_NOT_OPERATOR "!"

#define CS_LEXER_SPACE_CHARACTER ' '
#define CS_LEXER_TAB_CHARACTER '\t'
#define CS_LEXER_CARRIAGERETURN_CHARACTER '\n'
#define CS_LEXER_LINEFEED_CHARACTER '\r'
#define CS_LEXER_COMMENT_CHARACTER '#'
#define CS_LEXER_QUOTE_CHARACTER '"'
#define CS_LEXER_BACKSLASH_CHARACTER '\\'
#define CS_LEXER_UNDERSCORE_CHARACTER '_'

#define CS_LEXER_FLOAT_SEPARATOR '.'
#define CS_LEXER_ACCESSER_SEPARATOR CS_LEXER_FLOAT_SEPARATOR
#define CS_LEXER_ARGUMENTS_SEPARATOR ','
#define CS_LEXER_ENTERFUNCTION_SEPARATOR '('
#define CS_LEXER_EXITFUNCTION_SEPARATOR ')'
#define CS_LEXER_ENTERARRAY_SEPARATOR '['
#define CS_LEXER_EXITARRAY_SEPARATOR ']'
#define CS_LEXER_FUNCTION_SEPARATOR "()"
#define CS_LEXER_ARRAY_SEPARATOR "[]"

#endif // TOKENSTRINGS_HPP
